

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Sep 12 23:38:38 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 22/03/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     008F                     	;# 
    98     0090                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0095                     	;# 
   106     0096                     	;# 
   107     0097                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009A                     	;# 
   111     009B                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     009F                     	;# 
   116     0105                     	;# 
   117     0107                     	;# 
   118     0108                     	;# 
   119     0109                     	;# 
   120     010C                     	;# 
   121     010C                     	;# 
   122     010D                     	;# 
   123     010E                     	;# 
   124     010F                     	;# 
   125     0185                     	;# 
   126     0187                     	;# 
   127     0188                     	;# 
   128     0189                     	;# 
   129     018C                     	;# 
   130     018D                     	;# 
   131     0000                     	;# 
   132     0001                     	;# 
   133     0002                     	;# 
   134     0003                     	;# 
   135     0004                     	;# 
   136     0005                     	;# 
   137     0006                     	;# 
   138     0007                     	;# 
   139     0008                     	;# 
   140     0009                     	;# 
   141     000A                     	;# 
   142     000B                     	;# 
   143     000C                     	;# 
   144     000D                     	;# 
   145     000E                     	;# 
   146     000E                     	;# 
   147     000F                     	;# 
   148     0010                     	;# 
   149     0011                     	;# 
   150     0012                     	;# 
   151     0013                     	;# 
   152     0014                     	;# 
   153     0015                     	;# 
   154     0015                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001B                     	;# 
   161     001B                     	;# 
   162     001C                     	;# 
   163     001D                     	;# 
   164     001E                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     0087                     	;# 
   170     0088                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     008F                     	;# 
   176     0090                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0095                     	;# 
   184     0096                     	;# 
   185     0097                     	;# 
   186     0098                     	;# 
   187     0099                     	;# 
   188     009A                     	;# 
   189     009B                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     0105                     	;# 
   195     0107                     	;# 
   196     0108                     	;# 
   197     0109                     	;# 
   198     010C                     	;# 
   199     010C                     	;# 
   200     010D                     	;# 
   201     010E                     	;# 
   202     010F                     	;# 
   203     0185                     	;# 
   204     0187                     	;# 
   205     0188                     	;# 
   206     0189                     	;# 
   207     018C                     	;# 
   208     018D                     	;# 
   209     0013                     _SSPBUF	set	19
   210     0014                     _SSPCON	set	20
   211     0005                     _PORTA	set	5
   212     0007                     _PORTC	set	7
   213     0038                     _RC0	set	56
   214     0039                     _RC1	set	57
   215     0029                     _RA1	set	41
   216     0028                     _RA0	set	40
   217     0091                     _SSPCON2	set	145
   218     0094                     _SSPSTAT	set	148
   219     0085                     _TRISA	set	133
   220     0087                     _TRISC	set	135
   221     048A                     _PEN	set	1162
   222     048E                     _ACKSTAT	set	1166
   223     04A0                     _BF	set	1184
   224     0488                     _SEN	set	1160
   225     0189                     _ANSELH	set	393
   226     0188                     _ANSEL	set	392
   227                           
   228                           	psect	strings
   229     0003                     __pstrings:
   230     0003                     stringtab:
   231     0003                     __stringtab:
   232     0003                     stringcode:	
   233                           ;	String table - string pointers are 1 byte each
   234                           
   235     0003                     stringdir:
   236     0003  3000               	movlw	high stringdir
   237     0004  008A               	movwf	10
   238     0005  0804               	movf	4,w
   239     0006  0A84               	incf	4,f
   240     0007  0782               	addwf	2,f
   241     0008                     __stringbase:
   242     0008  3400               	retlw	0
   243     0009                     __end_of__stringtab:
   244     0009                     STR_2:
   245     0009  3462               	retlw	98	;'b'
   246     000A  3479               	retlw	121	;'y'
   247     000B  3465               	retlw	101	;'e'
   248     000C  3400               	retlw	0
   249     000D                     STR_1:
   250     000D  3468               	retlw	104	;'h'
   251     000E  3461               	retlw	97	;'a'
   252     000F  3469               	retlw	105	;'i'
   253     0010  3400               	retlw	0
   254                           
   255                           	psect	cinit
   256     07FC                     start_initialization:	
   257                           ; #config settings
   258                           
   259     07FC                     __initialization:
   260     07FC                     end_of_initialization:	
   261                           ;End of C runtime variable initialization code
   262                           
   263     07FC                     __end_of__initialization:
   264     07FC  0183               	clrf	3
   265     07FD  120A  118A  2F9E   	ljmp	_main	;jump to C main() function
   266                           
   267                           	psect	cstackCOMMON
   268     0070                     __pcstackCOMMON:
   269     0070                     ?_i2c_ins:
   270     0070                     ??_i2c_ins:	
   271                           ; 1 bytes @ 0x0
   272                           
   273     0070                     ?_i2c_st:	
   274                           ; 1 bytes @ 0x0
   275                           
   276     0070                     ??_i2c_st:	
   277                           ; 1 bytes @ 0x0
   278                           
   279     0070                     ?_i2c_write:	
   280                           ; 1 bytes @ 0x0
   281                           
   282     0070                     ??_i2c_write:	
   283                           ; 1 bytes @ 0x0
   284                           
   285     0070                     ?_i2c_stop:	
   286                           ; 1 bytes @ 0x0
   287                           
   288     0070                     ??_i2c_stop:	
   289                           ; 1 bytes @ 0x0
   290                           
   291     0070                     ?_puls:	
   292                           ; 1 bytes @ 0x0
   293                           
   294     0070                     ??_puls:	
   295                           ; 1 bytes @ 0x0
   296                           
   297     0070                     ?_main:	
   298                           ; 1 bytes @ 0x0
   299                           
   300     0070                     i2c_write@data:	
   301                           ; 2 bytes @ 0x0
   302                           
   303                           
   304                           ; 1 bytes @ 0x0
   305     0070                     	ds	1
   306     0071                     ?_lcd:
   307     0071                     lcd@add:	
   308                           ; 1 bytes @ 0x1
   309                           
   310                           
   311                           ; 1 bytes @ 0x1
   312     0071                     	ds	1
   313     0072                     ??_lcd:
   314     0072                     lcd@data:	
   315                           ; 1 bytes @ 0x2
   316                           
   317                           
   318                           ; 1 bytes @ 0x2
   319     0072                     	ds	1
   320     0073                     ?_cmd:
   321     0073                     cmd@data:	
   322                           ; 1 bytes @ 0x3
   323                           
   324                           
   325                           ; 1 bytes @ 0x3
   326     0073                     	ds	1
   327     0074                     cmd@add:
   328                           
   329                           ; 1 bytes @ 0x4
   330     0074                     	ds	1
   331     0075                     ??_cmd:
   332     0075                     cmd@command:	
   333                           ; 1 bytes @ 0x5
   334                           
   335                           
   336                           ; 1 bytes @ 0x5
   337     0075                     	ds	1
   338     0076                     ?_st:
   339     0076                     st@add:	
   340                           ; 1 bytes @ 0x6
   341                           
   342                           
   343                           ; 1 bytes @ 0x6
   344     0076                     	ds	1
   345     0077                     ??_st:
   346     0077                     st@data:	
   347                           ; 1 bytes @ 0x7
   348                           
   349                           
   350                           ; 1 bytes @ 0x7
   351     0077                     	ds	1
   352     0078                     ??_main:
   353                           
   354                           	psect	maintext
   355     079E                     __pmaintext:	
   356                           ; 1 bytes @ 0x8
   357 ;;
   358 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   359 ;;
   360 ;; *************** function _main *****************
   361 ;; Defined at:
   362 ;;		line 41 in file "PCF8574_8_BIT.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  2   48[None  ] int 
   369 ;; Registers used:
   370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : B00/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0
   379 ;;      Totals:         0       0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels required when called: 4
   382 ;; This function calls:
   383 ;;		_cmd
   384 ;;		_i2c_ins
   385 ;;		_st
   386 ;; This function is called by:
   387 ;;		Startup code after reset
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391     079E                     _main:	
   392                           ;psect for function _main
   393                           
   394     079E                     l767:	
   395                           ;incstack = 0
   396                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   397                           
   398                           
   399                           ;PCF8574_8_BIT.c: 43:  PORTC=0X00;
   400     079E  1283               	bcf	3,5	;RP0=0, select bank0
   401     079F  1303               	bcf	3,6	;RP1=0, select bank0
   402     07A0  0187               	clrf	7	;volatile
   403     07A1                     l769:
   404                           
   405                           ;PCF8574_8_BIT.c: 44:  TRISC=0X3C;
   406     07A1  303C               	movlw	60
   407     07A2  1683               	bsf	3,5	;RP0=1, select bank1
   408     07A3  1303               	bcf	3,6	;RP1=0, select bank1
   409     07A4  0087               	movwf	7	;volatile
   410     07A5                     l771:
   411                           
   412                           ;PCF8574_8_BIT.c: 45:  PORTA=0X00;
   413     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   414     07A6  1303               	bcf	3,6	;RP1=0, select bank0
   415     07A7  0185               	clrf	5	;volatile
   416     07A8                     l773:
   417                           
   418                           ;PCF8574_8_BIT.c: 46:  TRISA=0X00;
   419     07A8  1683               	bsf	3,5	;RP0=1, select bank1
   420     07A9  1303               	bcf	3,6	;RP1=0, select bank1
   421     07AA  0185               	clrf	5	;volatile
   422     07AB                     l775:
   423                           
   424                           ;PCF8574_8_BIT.c: 47:  ANSEL=ANSELH=0X00;
   425     07AB  1683               	bsf	3,5	;RP0=1, select bank3
   426     07AC  1703               	bsf	3,6	;RP1=1, select bank3
   427     07AD  0189               	clrf	9	;volatile
   428     07AE  0188               	clrf	8	;volatile
   429     07AF                     l777:
   430                           
   431                           ;PCF8574_8_BIT.c: 48:  i2c_ins();
   432     07AF  120A  118A  271D  120A  118A  	fcall	_i2c_ins
   433     07B4                     l779:
   434                           
   435                           ;PCF8574_8_BIT.c: 50:  cmd(0,0x0e,0x40);
   436     07B4  300E               	movlw	14
   437     07B5  00F3               	movwf	cmd@data
   438     07B6  3040               	movlw	64
   439     07B7  00F4               	movwf	cmd@add
   440     07B8  3000               	movlw	0
   441     07B9  120A  118A  2762  120A  118A  	fcall	_cmd
   442     07BE                     l781:
   443                           
   444                           ;PCF8574_8_BIT.c: 51:  cmd(0,0x38,0x40);
   445     07BE  3038               	movlw	56
   446     07BF  00F3               	movwf	cmd@data
   447     07C0  3040               	movlw	64
   448     07C1  00F4               	movwf	cmd@add
   449     07C2  3000               	movlw	0
   450     07C3  120A  118A  2762  120A  118A  	fcall	_cmd
   451     07C8                     l783:
   452                           
   453                           ;PCF8574_8_BIT.c: 54:  {;PCF8574_8_BIT.c: 55:   cmd(0,0x80,0x40);
   454     07C8  3080               	movlw	128
   455     07C9  00F3               	movwf	cmd@data
   456     07CA  3040               	movlw	64
   457     07CB  00F4               	movwf	cmd@add
   458     07CC  3000               	movlw	0
   459     07CD  120A  118A  2762  120A  118A  	fcall	_cmd
   460     07D2                     l785:
   461                           
   462                           ;PCF8574_8_BIT.c: 56:   if(RA0==1)
   463     07D2  1283               	bcf	3,5	;RP0=0, select bank0
   464     07D3  1303               	bcf	3,6	;RP1=0, select bank0
   465     07D4  1C05               	btfss	5,0	;volatile
   466     07D5  2FD7               	goto	u151
   467     07D6  2FD8               	goto	u150
   468     07D7                     u151:
   469     07D7  2FE6               	goto	l50
   470     07D8                     u150:
   471     07D8                     l787:
   472                           
   473                           ;PCF8574_8_BIT.c: 57:   {;PCF8574_8_BIT.c: 58:    st("hai",0x40);
   474     07D8  3040               	movlw	64
   475     07D9  00F6               	movwf	st@add
   476     07DA  3005               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   477     07DB  120A  118A  277B  120A  118A  	fcall	_st
   478     07E0                     l51:	
   479                           ;PCF8574_8_BIT.c: 59:    while(RA0==1);
   480                           
   481     07E0  1283               	bcf	3,5	;RP0=0, select bank0
   482     07E1  1303               	bcf	3,6	;RP1=0, select bank0
   483     07E2  1805               	btfsc	5,0	;volatile
   484     07E3  2FE5               	goto	u161
   485     07E4  2FE6               	goto	u160
   486     07E5                     u161:
   487     07E5  2FE0               	goto	l51
   488     07E6                     u160:
   489     07E6                     l50:	
   490                           ;PCF8574_8_BIT.c: 60:   }
   491                           
   492                           
   493                           ;PCF8574_8_BIT.c: 61:   if(RA1==1)
   494     07E6  1C85               	btfss	5,1	;volatile
   495     07E7  2FE9               	goto	u171
   496     07E8  2FEA               	goto	u170
   497     07E9                     u171:
   498     07E9  2FC8               	goto	l783
   499     07EA                     u170:
   500     07EA                     l789:
   501                           
   502                           ;PCF8574_8_BIT.c: 62:   {;PCF8574_8_BIT.c: 63:    st("bye",0x40);
   503     07EA  3040               	movlw	64
   504     07EB  00F6               	movwf	st@add
   505     07EC  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   506     07ED  120A  118A  277B  120A  118A  	fcall	_st
   507     07F2                     l55:	
   508                           ;PCF8574_8_BIT.c: 64:    while(RA1==1);
   509                           
   510     07F2  1283               	bcf	3,5	;RP0=0, select bank0
   511     07F3  1303               	bcf	3,6	;RP1=0, select bank0
   512     07F4  1885               	btfsc	5,1	;volatile
   513     07F5  2FF7               	goto	u181
   514     07F6  2FF8               	goto	u180
   515     07F7                     u181:
   516     07F7  2FF2               	goto	l55
   517     07F8                     u180:
   518     07F8  2FC8               	goto	l783
   519     07F9  120A  118A  2800   	ljmp	start
   520     07FC                     __end_of_main:
   521                           
   522                           	psect	text1
   523     077B                     __ptext1:	
   524 ;; *************** function _st *****************
   525 ;; Defined at:
   526 ;;		line 110 in file "PCF8574_8_BIT.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;  data            1    wreg     PTR unsigned char 
   529 ;;		 -> STR_2(4), STR_1(4), 
   530 ;;  add             1    6[COMMON] unsigned char 
   531 ;; Auto vars:     Size  Location     Type
   532 ;;  data            1    7[COMMON] PTR unsigned char 
   533 ;;		 -> STR_2(4), STR_1(4), 
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   543 ;;      Params:         1       0       0       0       0
   544 ;;      Locals:         1       0       0       0       0
   545 ;;      Temps:          0       0       0       0       0
   546 ;;      Totals:         2       0       0       0       0
   547 ;;Total ram usage:        2 bytes
   548 ;; Hardware stack levels used: 1
   549 ;; Hardware stack levels required when called: 3
   550 ;; This function calls:
   551 ;;		_cmd
   552 ;; This function is called by:
   553 ;;		_main
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557     077B                     _st:	
   558                           ;psect for function _st
   559                           
   560                           
   561                           ;incstack = 0
   562                           ; Regs used in _st: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   563                           ;st@data stored from wreg
   564     077B  00F7               	movwf	st@data
   565     077C                     l759:
   566                           
   567                           ;PCF8574_8_BIT.c: 110: void st(char *data,char add);PCF8574_8_BIT.c: 111: {;PCF8574_8_BI
      +                          T.c: 112:  while(*data)
   568     077C  2F91               	goto	l765
   569     077D                     l761:
   570                           
   571                           ;PCF8574_8_BIT.c: 113:  cmd(1,*data++,add);
   572     077D  0877               	movf	st@data,w
   573     077E  0084               	movwf	4
   574     077F  120A  118A  2003  120A  118A  	fcall	stringdir
   575     0784  00F3               	movwf	cmd@data
   576     0785  0876               	movf	st@add,w
   577     0786  00F4               	movwf	cmd@add
   578     0787  3001               	movlw	1
   579     0788  120A  118A  2762  120A  118A  	fcall	_cmd
   580     078D                     l763:
   581     078D  3001               	movlw	1
   582     078E  00FF               	movwf	btemp+1
   583     078F  087F               	movf	btemp+1,w
   584     0790  07F7               	addwf	st@data,f
   585     0791                     l765:
   586                           
   587                           ;PCF8574_8_BIT.c: 112:  while(*data)
   588     0791  0877               	movf	st@data,w
   589     0792  0084               	movwf	4
   590     0793  120A  118A  2003  120A  118A  	fcall	stringdir
   591     0798  3A00               	xorlw	0
   592     0799  1D03               	skipz
   593     079A  2F9C               	goto	u141
   594     079B  2F9D               	goto	u140
   595     079C                     u141:
   596     079C  2F7D               	goto	l761
   597     079D                     u140:
   598     079D                     l99:
   599     079D  0008               	return
   600     079E                     __end_of_st:
   601                           
   602                           	psect	text2
   603     0762                     __ptext2:	
   604 ;; *************** function _cmd *****************
   605 ;; Defined at:
   606 ;;		line 104 in file "PCF8574_8_BIT.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;  command         1    wreg     unsigned char 
   609 ;;  data            1    3[COMMON] unsigned char 
   610 ;;  add             1    4[COMMON] unsigned char 
   611 ;; Auto vars:     Size  Location     Type
   612 ;;  command         1    5[COMMON] unsigned char 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0, pclath, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         2       0       0       0       0
   623 ;;      Locals:         1       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0
   625 ;;      Totals:         3       0       0       0       0
   626 ;;Total ram usage:        3 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; Hardware stack levels required when called: 2
   629 ;; This function calls:
   630 ;;		_lcd
   631 ;;		_puls
   632 ;; This function is called by:
   633 ;;		_main
   634 ;;		_st
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638     0762                     _cmd:	
   639                           ;psect for function _cmd
   640                           
   641                           
   642                           ;incstack = 0
   643                           ; Regs used in _cmd: [wreg+status,2+status,0+pclath+cstack]
   644                           ;cmd@command stored from wreg
   645     0762  00F5               	movwf	cmd@command
   646     0763                     l755:
   647                           
   648                           ;PCF8574_8_BIT.c: 104: void cmd(char command,char data,char add);PCF8574_8_BIT.c: 105: {
      +                          ;PCF8574_8_BIT.c: 106:  RC0=command;
   649     0763  1875               	btfsc	cmd@command,0
   650     0764  2F66               	goto	u121
   651     0765  2F6A               	goto	u120
   652     0766                     u121:
   653     0766  1283               	bcf	3,5	;RP0=0, select bank0
   654     0767  1303               	bcf	3,6	;RP1=0, select bank0
   655     0768  1407               	bsf	7,0	;volatile
   656     0769  2F6D               	goto	u134
   657     076A                     u120:
   658     076A  1283               	bcf	3,5	;RP0=0, select bank0
   659     076B  1303               	bcf	3,6	;RP1=0, select bank0
   660     076C  1007               	bcf	7,0	;volatile
   661     076D                     u134:
   662     076D                     l757:
   663                           
   664                           ;PCF8574_8_BIT.c: 107:  lcd(data,add);
   665     076D  0874               	movf	cmd@add,w
   666     076E  00F1               	movwf	lcd@add
   667     076F  0873               	movf	cmd@data,w
   668     0770  120A  118A  274A  120A  118A  	fcall	_lcd
   669                           
   670                           ;PCF8574_8_BIT.c: 108:  puls();
   671     0775  120A  118A  2739  120A  118A  	fcall	_puls
   672     077A                     l93:
   673     077A  0008               	return
   674     077B                     __end_of_cmd:
   675                           
   676                           	psect	text3
   677     0739                     __ptext3:	
   678 ;; *************** function _puls *****************
   679 ;; Defined at:
   680 ;;		line 97 in file "PCF8574_8_BIT.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0
   696 ;;      Temps:          1       0       0       0       0
   697 ;;      Totals:         1       0       0       0       0
   698 ;;Total ram usage:        1 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_cmd
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707     0739                     _puls:	
   708                           ;psect for function _puls
   709                           
   710     0739                     l703:	
   711                           ;incstack = 0
   712                           ; Regs used in _puls: [wreg]
   713                           
   714                           
   715                           ;PCF8574_8_BIT.c: 99:  RC1=1;
   716     0739  1283               	bcf	3,5	;RP0=0, select bank0
   717     073A  1303               	bcf	3,6	;RP1=0, select bank0
   718     073B  1487               	bsf	7,1	;volatile
   719     073C                     l705:
   720                           
   721                           ;PCF8574_8_BIT.c: 100:  _delay((unsigned long)((50)*(4000000/4000000.0)));
   722     073C  3010               	movlw	16
   723     073D  00F0               	movwf	??_puls
   724     073E                     u197:
   725     073E  0BF0               	decfsz	??_puls,f
   726     073F  2F3E               	goto	u197
   727     0740  0000               	nop
   728     0741                     l707:
   729                           
   730                           ;PCF8574_8_BIT.c: 101:  RC1=0;
   731     0741  1283               	bcf	3,5	;RP0=0, select bank0
   732     0742  1303               	bcf	3,6	;RP1=0, select bank0
   733     0743  1087               	bcf	7,1	;volatile
   734                           
   735                           ;PCF8574_8_BIT.c: 102:  _delay((unsigned long)((50)*(4000000/4000000.0)));
   736     0744  3010               	movlw	16
   737     0745  00F0               	movwf	??_puls
   738     0746                     u207:
   739     0746  0BF0               	decfsz	??_puls,f
   740     0747  2F46               	goto	u207
   741     0748  0000               	nop
   742     0749                     l90:
   743     0749  0008               	return
   744     074A                     __end_of_puls:
   745                           
   746                           	psect	text4
   747     074A                     __ptext4:	
   748 ;; *************** function _lcd *****************
   749 ;; Defined at:
   750 ;;		line 90 in file "PCF8574_8_BIT.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;  data            1    wreg     unsigned char 
   753 ;;  add             1    1[COMMON] unsigned char 
   754 ;; Auto vars:     Size  Location     Type
   755 ;;  data            1    2[COMMON] unsigned char 
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0, pclath, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         1       0       0       0       0
   766 ;;      Locals:         1       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0
   768 ;;      Totals:         2       0       0       0       0
   769 ;;Total ram usage:        2 bytes
   770 ;; Hardware stack levels used: 1
   771 ;; Hardware stack levels required when called: 1
   772 ;; This function calls:
   773 ;;		_i2c_st
   774 ;;		_i2c_stop
   775 ;;		_i2c_write
   776 ;; This function is called by:
   777 ;;		_cmd
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781     074A                     _lcd:	
   782                           ;psect for function _lcd
   783                           
   784                           
   785                           ;incstack = 0
   786                           ; Regs used in _lcd: [wreg+status,2+status,0+pclath+cstack]
   787                           ;lcd@data stored from wreg
   788     074A  00F2               	movwf	lcd@data
   789     074B                     l749:
   790                           
   791                           ;PCF8574_8_BIT.c: 90: void lcd(char data,char add);PCF8574_8_BIT.c: 91: {;PCF8574_8_BIT.
      +                          c: 92:  i2c_st();
   792     074B  120A  118A  270D  120A  118A  	fcall	_i2c_st
   793     0750                     l751:
   794                           
   795                           ;PCF8574_8_BIT.c: 93:  i2c_write(add);
   796     0750  0871               	movf	lcd@add,w
   797     0751  120A  118A  2729  120A  118A  	fcall	_i2c_write
   798     0756                     l753:
   799                           
   800                           ;PCF8574_8_BIT.c: 94:  i2c_write(data);
   801     0756  0872               	movf	lcd@data,w
   802     0757  120A  118A  2729  120A  118A  	fcall	_i2c_write
   803                           
   804                           ;PCF8574_8_BIT.c: 95:  i2c_stop();
   805     075C  120A  118A  2715  120A  118A  	fcall	_i2c_stop
   806     0761                     l87:
   807     0761  0008               	return
   808     0762                     __end_of_lcd:
   809                           
   810                           	psect	text5
   811     0729                     __ptext5:	
   812 ;; *************** function _i2c_write *****************
   813 ;; Defined at:
   814 ;;		line 79 in file "PCF8574_8_BIT.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  data            1    wreg     unsigned char 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  data            1    0[COMMON] unsigned char 
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       0       0       0       0
   829 ;;      Locals:         1       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0
   831 ;;      Totals:         1       0       0       0       0
   832 ;;Total ram usage:        1 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_lcd
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841     0729                     _i2c_write:	
   842                           ;psect for function _i2c_write
   843                           
   844                           
   845                           ;incstack = 0
   846                           ; Regs used in _i2c_write: [wreg]
   847                           ;i2c_write@data stored from wreg
   848     0729  00F0               	movwf	i2c_write@data
   849     072A                     l693:
   850                           
   851                           ;PCF8574_8_BIT.c: 79: void i2c_write(char data);PCF8574_8_BIT.c: 80: {;PCF8574_8_BIT.c: 
      +                          81:  SSPBUF=data;
   852     072A  0870               	movf	i2c_write@data,w
   853     072B  1283               	bcf	3,5	;RP0=0, select bank0
   854     072C  1303               	bcf	3,6	;RP1=0, select bank0
   855     072D  0093               	movwf	19	;volatile
   856     072E                     l72:	
   857                           ;PCF8574_8_BIT.c: 82:  while(BF==1);
   858                           
   859     072E  1683               	bsf	3,5	;RP0=1, select bank1
   860     072F  1303               	bcf	3,6	;RP1=0, select bank1
   861     0730  1814               	btfsc	20,0	;volatile
   862     0731  2F33               	goto	u21
   863     0732  2F34               	goto	u20
   864     0733                     u21:
   865     0733  2F2E               	goto	l72
   866     0734                     u20:
   867     0734                     l75:
   868     0734  1B11               	btfsc	17,6	;volatile
   869     0735  2F37               	goto	u31
   870     0736  2F38               	goto	u30
   871     0737                     u31:
   872     0737  2F34               	goto	l75
   873     0738                     u30:
   874     0738                     l78:
   875     0738  0008               	return
   876     0739                     __end_of_i2c_write:
   877                           
   878                           	psect	text6
   879     0715                     __ptext6:	
   880 ;; *************** function _i2c_stop *****************
   881 ;; Defined at:
   882 ;;		line 85 in file "PCF8574_8_BIT.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;		None
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		None
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   896 ;;      Params:         0       0       0       0       0
   897 ;;      Locals:         0       0       0       0       0
   898 ;;      Temps:          0       0       0       0       0
   899 ;;      Totals:         0       0       0       0       0
   900 ;;Total ram usage:        0 bytes
   901 ;; Hardware stack levels used: 1
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_lcd
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909     0715                     _i2c_stop:	
   910                           ;psect for function _i2c_stop
   911                           
   912     0715                     l695:	
   913                           ;incstack = 0
   914                           ; Regs used in _i2c_stop: []
   915                           
   916                           
   917                           ;PCF8574_8_BIT.c: 87:  PEN=1;
   918     0715  1683               	bsf	3,5	;RP0=1, select bank1
   919     0716  1303               	bcf	3,6	;RP1=0, select bank1
   920     0717  1511               	bsf	17,2	;volatile
   921     0718                     l81:	
   922                           ;PCF8574_8_BIT.c: 88:  while(PEN==1);
   923                           
   924     0718  1911               	btfsc	17,2	;volatile
   925     0719  2F1B               	goto	u41
   926     071A  2F1C               	goto	u40
   927     071B                     u41:
   928     071B  2F18               	goto	l81
   929     071C                     u40:
   930     071C                     l84:
   931     071C  0008               	return
   932     071D                     __end_of_i2c_stop:
   933                           
   934                           	psect	text7
   935     070D                     __ptext7:	
   936 ;; *************** function _i2c_st *****************
   937 ;; Defined at:
   938 ;;		line 74 in file "PCF8574_8_BIT.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		None
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         0       0       0       0       0
   953 ;;      Locals:         0       0       0       0       0
   954 ;;      Temps:          0       0       0       0       0
   955 ;;      Totals:         0       0       0       0       0
   956 ;;Total ram usage:        0 bytes
   957 ;; Hardware stack levels used: 1
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_lcd
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965     070D                     _i2c_st:	
   966                           ;psect for function _i2c_st
   967                           
   968     070D                     l691:	
   969                           ;incstack = 0
   970                           ; Regs used in _i2c_st: []
   971                           
   972                           
   973                           ;PCF8574_8_BIT.c: 76:  SEN=1;
   974     070D  1683               	bsf	3,5	;RP0=1, select bank1
   975     070E  1303               	bcf	3,6	;RP1=0, select bank1
   976     070F  1411               	bsf	17,0	;volatile
   977     0710                     l66:	
   978                           ;PCF8574_8_BIT.c: 77:  while(SEN==1);
   979                           
   980     0710  1811               	btfsc	17,0	;volatile
   981     0711  2F13               	goto	u11
   982     0712  2F14               	goto	u10
   983     0713                     u11:
   984     0713  2F10               	goto	l66
   985     0714                     u10:
   986     0714                     l69:
   987     0714  0008               	return
   988     0715                     __end_of_i2c_st:
   989                           
   990                           	psect	text8
   991     071D                     __ptext8:	
   992 ;; *************** function _i2c_ins *****************
   993 ;; Defined at:
   994 ;;		line 68 in file "PCF8574_8_BIT.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1008 ;;      Params:         0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0
  1010 ;;      Temps:          0       0       0       0       0
  1011 ;;      Totals:         0       0       0       0       0
  1012 ;;Total ram usage:        0 bytes
  1013 ;; Hardware stack levels used: 1
  1014 ;; This function calls:
  1015 ;;		Nothing
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021     071D                     _i2c_ins:	
  1022                           ;psect for function _i2c_ins
  1023                           
  1024     071D                     l713:	
  1025                           ;incstack = 0
  1026                           ; Regs used in _i2c_ins: [wreg+status,2]
  1027                           
  1028                           
  1029                           ;PCF8574_8_BIT.c: 70:  SSPSTAT=0X80;
  1030     071D  3080               	movlw	128
  1031     071E  1683               	bsf	3,5	;RP0=1, select bank1
  1032     071F  1303               	bcf	3,6	;RP1=0, select bank1
  1033     0720  0094               	movwf	20	;volatile
  1034                           
  1035                           ;PCF8574_8_BIT.c: 71:  SSPCON=0X28;
  1036     0721  3028               	movlw	40
  1037     0722  1283               	bcf	3,5	;RP0=0, select bank0
  1038     0723  1303               	bcf	3,6	;RP1=0, select bank0
  1039     0724  0094               	movwf	20	;volatile
  1040     0725                     l715:
  1041                           
  1042                           ;PCF8574_8_BIT.c: 72:  SSPCON2=0X00;
  1043     0725  1683               	bsf	3,5	;RP0=1, select bank1
  1044     0726  1303               	bcf	3,6	;RP1=0, select bank1
  1045     0727  0191               	clrf	17	;volatile
  1046     0728                     l63:
  1047     0728  0008               	return
  1048     0729                     __end_of_i2c_ins:
  1049     007E                     btemp	set	126	;btemp
  1050     007E                     wtemp0	set	126
  1051                           
  1052                           	psect	config
  1053                           
  1054                           ;Config register CONFIG1 @ 0x2007
  1055                           ;	Oscillator Selection bits
  1056                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1057                           ;	Watchdog Timer Enable bit
  1058                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1059                           ;	Power-up Timer Enable bit
  1060                           ;	PWRTE = ON, PWRT enabled
  1061                           ;	RE3/MCLR pin function select bit
  1062                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1063                           ;	Code Protection bit
  1064                           ;	CP = OFF, Program memory code protection is disabled
  1065                           ;	Data Code Protection bit
  1066                           ;	CPD = OFF, Data memory code protection is disabled
  1067                           ;	Brown Out Reset Selection bits
  1068                           ;	BOREN = OFF, BOR disabled
  1069                           ;	Internal External Switchover bit
  1070                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1071                           ;	Fail-Safe Clock Monitor Enabled bit
  1072                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1073                           ;	Low Voltage Programming Enable bit
  1074                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1075                           ;	In-Circuit Debugger Mode bit
  1076                           ;	DEBUG = 0x1, unprogrammed default
  1077     2007                     	org	8199
  1078     2007  2CE4               	dw	11492
  1079                           
  1080                           ;Config register CONFIG2 @ 0x2008
  1081                           ;	Brown-out Reset Selection bit
  1082                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1083                           ;	Flash Program Memory Self Write Enable bits
  1084                           ;	WRT = OFF, Write protection off
  1085     2008                     	org	8200
  1086     2008  3FFF               	dw	16383

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    st@data	PTR unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_st
    _st->_cmd
    _cmd->_lcd
    _lcd->_i2c_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1903
                                _cmd
                            _i2c_ins
                                 _st
 ---------------------------------------------------------------------------------
 (1) _st                                                   2     1      1    1094
                                              6 COMMON     2     1      1
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  3     1      2     809
                                              3 COMMON     3     1      2
                                _lcd
                               _puls
 ---------------------------------------------------------------------------------
 (3) _puls                                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd                                                  2     1      1     135
                                              1 COMMON     2     1      1
                             _i2c_st
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_st                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_ins                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
     _lcd
       _i2c_st
       _i2c_stop
       _i2c_write
     _puls
   _i2c_ins
   _st
     _cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Sep 12 23:38:38 2023

                      pc 0002                       _BF 04A0                       l50 07E6  
                     l51 07E0                       l63 0728                       l55 07F2  
                     l72 072E                       l81 0718                       l66 0710  
                     l90 0749                       l75 0734                       l84 071C  
                     l69 0714                       l93 077A                       l78 0738  
                     l87 0761                       l99 079D                       u10 0714  
                     u11 0713                       u20 0734                       u21 0733  
                     u30 0738                       u31 0737                       u40 071C  
                     u41 071B                       _st 077B                       fsr 0004  
                    ?_st 0076                      l703 0739                      l713 071D  
                    l705 073C                      l715 0725                      l707 0741  
                    l751 0750                      l753 0756                      l761 077D  
                    l691 070D                      l755 0763                      l763 078D  
                    l771 07A5                      l693 072A                      l749 074B  
                    l757 076D                      l765 0791                      l781 07BE  
                    l773 07A8                      l695 0715                      l759 077C  
                    l783 07C8                      l775 07AB                      l767 079E  
                    l785 07D2                      l777 07AF                      l769 07A1  
                    l787 07D8                      l779 07B4                      l789 07EA  
                    _RA0 0028                      _RA1 0029                      _RC0 0038  
                    _RC1 0039                      u120 076A                      u121 0766  
                    u140 079D                      u141 079C                      u134 076D  
                    u150 07D8                      u207 0746                      u151 07D7  
                    u160 07E6                      u161 07E5                      u170 07EA  
                    u171 07E9                      u180 07F8                      u181 07F7  
                    _PEN 048A                      u197 073E                      _SEN 0488  
                    _cmd 0762                      _lcd 074A                      fsr0 0004  
                   ??_st 0077                     ?_cmd 0073                     ?_lcd 0071  
                   STR_1 000D                     STR_2 0009                     _main 079E  
                   _puls 0739                     btemp 007E                     start 0000  
        __end_of_i2c_ins 0729                    ??_cmd 0075                    ??_lcd 0072  
                  ?_main 0070                    ?_puls 0070                    _ANSEL 0188  
                  _PORTA 0005                    _PORTC 0007                    _TRISA 0085  
                  _TRISC 0087                    st@add 0076                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC             __end_of_puls 074A         __end_of_i2c_stop 071D  
                 ??_main 0078                   ??_puls 0070                   _ANSELH 0189  
                 _SSPCON 0014                   _SSPBUF 0013                ??_i2c_ins 0070  
                 _i2c_st 070D                   cmd@add 0074                   lcd@add 0071  
                 st@data 0077  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __end_of_st 079E        __end_of_i2c_write 0739                ?_i2c_stop 0070  
                ?_i2c_st 0070               __pmaintext 079E                  _ACKSTAT 048E  
                _SSPCON2 0091                  _SSPSTAT 0094               cmd@command 0075  
             __stringtab 0003               ??_i2c_stop 0070                  _i2c_ins 071D  
                __ptext1 077B                  __ptext2 0762                  __ptext3 0739  
                __ptext4 074A                  __ptext5 0729                  __ptext6 0715  
                __ptext7 070D                  __ptext8 071D                  cmd@data 0073  
                lcd@data 0072     end_of_initialization 07FC            i2c_write@data 0070  
         __end_of_i2c_st 0715      start_initialization 07FC              __end_of_cmd 077B  
            __end_of_lcd 0762                _i2c_write 0729                 ??_i2c_st 0070  
              ___latbits 0002               ?_i2c_write 0070                 ?_i2c_ins 0070  
              __pstrings 0003              __stringbase 0008              ??_i2c_write 0070  
               _i2c_stop 0715       __end_of__stringtab 0009                stringcode 0003  
               stringdir 0003                 stringtab 0003  
